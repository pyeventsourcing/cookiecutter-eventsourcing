[tool.poetry]
name = "{{cookiecutter.project_slug}}"
version = "0.1.dev0"
description = "{{cookiecutter.project_name}}"
authors = [
    "{{cookiecutter.author_fullname}} <{{cookiecutter.author_email}}>",
]
license = "BSD 3-Clause"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python",
]
readme = "README.md"
#homepage = ""
#repository = ""
include = ["{{cookiecutter.pkg_name}}/py.typed"]

[tool.poetry.dependencies]
python = "^3.7"
eventsourcing = { version = "~9.2.14" }

[tool.poetry.dev-dependencies]
black = { version = "*", allow-prereleases = true }
flake8 = "*"
flake8-broken-line = "*"
flake8-bugbear = "*"
flake8-coding = "*"
flake8-isort = "*"
flake8-tidy-imports = "*"
isort = "*"
mypy = "*"
pre-commit = "*"
pre-commit-hooks = "*"
pytest = "*"
pytest-cov = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'
preview = true
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.pip-cache
  | \.poetry
  | \.venv
  | \.vscode
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.coverage.run]
branch = true
omit = []

[tool.coverage.report]
exclude_lines = [
  # Have to re-enable the standard pragma
  "pragma: no cover",
  # Don't complain about missing debug-only code:
  "def __repr__",
  "if self.debug",
  # Don't complain about some magic methods:
  "def __str__",
  # Don't complain if tests don't hit defensive assertion code:
  "raise AssertionError",
  "raise NotImplementedError",
  # Don't complain if non-runnable code isn't run:
  "if 0:",
  "if __name__ == .__main__.:",
  # Don't complain about empty realizations
  "pass",
  # Don't complain about abstract methods
  "@abc.abstractmethod"
]
ignore_errors = true
precision = 2

[tool.isort]
combine_as_imports = true
profile = "black"
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
skip = ".eggs,.pip-cache,.poetry,venv,.venv,dist"
